[build-system]
requires = ["setuptools>=61.2"]
build-backend = "setuptools.build_meta"

[project]
name = "api_insee"
description = "Python helper to request Sirene Api on api.insee.fr"
authors = [{name = "Lenselle Nicolas", email = "lenselle.nicolas@gmail.com"}]
license = {text = "mit"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python",
]
urls = {Homepage = "https://github.com/sne3ks/api_insee"}
dynamic = ["version"]
requires-python = ">=3.8"

[project.readme]
file = "README.rst"
content-type = "text/x-rst"

[tool.setuptools]
zip-safe = false
include-package-data = true
package-dir = {"" = "src"}
platforms = ["any"]

[tool.setuptools.packages.find]
where = ["src"]
exclude = ["tests"]
namespaces = false

[tool.distutils.bdist_wheel]
# Use this option if your package is pure-python
universal = 1

[tool.pytest.ini_options]
# Options for py.test:
# Specify command line options as you would do when invoking py.test directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
norecursedirs = [
    "dist",
    "build",
    ".tox",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
    ".github"
]
testpaths = ["tests"]

[tool.aliases]
build = "bdist_wheel"
release = "build upload"

[tool.build_sphinx]
source_dir = "docs"
build_dir = "docs/_build"

[tool.devpi.upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no-vcs = "1"
formats = "bdist_wheel"

[tool.black]
target-version = ["py38", "py39","py310","py311"]

[tool.mypy]
strict = true
mypy_path = ['$MYPY_CONFIG_FILE_DIR', '$MYPY_CONFIG_FILE_DIR/src']
explicit_package_bases = true

[tool.ruff]
fix = true

[tool.ruff.lint]
extend-select = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]
ignore = [
    "A002", # argument shadowing python builtin
    "A003", # Class attribute shadowing python builtin
    "ANN10", # Missing type annotation for `self`, `cls`, etc...
    "ANN401", # Dynamically typed expressions (typing.Any) disallowed in `*args` `**kwargs`
    "D10", # missing docstring
    "D203", # one blank line before class docstring
    "D212", # multi-line-summary-first-line
    "FBT", # flakes8 boolean traps
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = [
    "E402", # Module level import not at top of file
    "PLC0414", # useless-import-alias
]
"test_*.py" = [
    "E501", # line-too-long
    "PLR2004", # missing-type-self
    "S101", # assert
    "SLF001", # Private member accessed
]

[tool.ruff.lint.isort]
lines-between-types = 1
order-by-type = true
